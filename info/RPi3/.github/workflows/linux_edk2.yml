# Copyright (c) 2021, Pete Batard <pete@akeo.ie>
# SPDX-License-Identifier: BSD-2-Clause-Patent

name: UEFI firmware - EDK2 build

on:  
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Set version
      id: set_version
      run: echo "::set-output name=version::${GITHUB_REF/refs\/tags\//}"
    - name: Set up Linux environment
      run: sudo apt install acpica-tools gcc-aarch64-linux-gnu python3-distutils uuid-dev
    - name: Check out EDK2 repositories
      uses: actions/checkout@v2
    - name: Check out EDK2 submodules
      run: git submodule update --init --recursive
    - name: Set up EDK2
      run: make -C edk2/BaseTools
    - name: Build UEFI firmware
      run: |
        export WORKSPACE=$PWD
        export PACKAGES_PATH=$WORKSPACE/edk2:$WORKSPACE/edk2-platforms:$WORKSPACE/edk2-non-osi
        export GCC5_AARCH64_PREFIX=aarch64-linux-gnu-
        export BUILD_FLAGS="-D SECURE_BOOT_ENABLE=TRUE -D INCLUDE_TFTP_COMMAND=TRUE -D NETWORK_ISCSI_ENABLE=TRUE"
        source edk2/edksetup.sh
        # EDK2's 'build' command doesn't play nice with spaces in environmnent variables, so we can't move the PCDs there...
        build -a AARCH64 -t GCC5 -p edk2-platforms/Platform/RaspberryPi/RPi3/RPi3.dsc -b DEBUG --pcd gEfiMdeModulePkgTokenSpaceGuid.PcdFirmwareVendor=L"https://github.com/pftf/RPi3" --pcd gEfiMdeModulePkgTokenSpaceGuid.PcdFirmwareVersionString=L"UEFI Firmware ${{steps.set_version.outputs.version}}" ${BUILD_FLAGS}
        build -a AARCH64 -t GCC5 -p edk2-platforms/Platform/RaspberryPi/RPi3/RPi3.dsc -b RELEASE --pcd gEfiMdeModulePkgTokenSpaceGuid.PcdFirmwareVendor=L"https://github.com/pftf/RPi3" --pcd gEfiMdeModulePkgTokenSpaceGuid.PcdFirmwareVersionString=L"UEFI Firmware ${{steps.set_version.outputs.version}}" ${BUILD_FLAGS}
        cp Build/RPi3/RELEASE_GCC5/FV/RPI_EFI.fd .
    - name: Upload UEFI firmware artifacts
      uses: actions/upload-artifact@v2
      with:
        name: RPi3 UEFI Firmware ${{steps.set_version.outputs.version}} Artifacts
        path: |
          Build/RPi3/DEBUG_GCC5/FV/RPI_EFI.fd
          Build/RPi3/RELEASE_GCC5/FV/RPI_EFI.fd
    - name: Download Raspberry Pi support files
      run: |
        curl -O -L https://github.com/raspberrypi/firmware/raw/master/boot/bootcode.bin
        curl -O -L https://github.com/raspberrypi/firmware/raw/master/boot/fixup.dat
        curl -O -L https://github.com/raspberrypi/firmware/raw/master/boot/start.elf
        curl -O -L https://github.com/raspberrypi/firmware/raw/master/boot/bcm2710-rpi-3-b.dtb
        curl -O -L https://github.com/raspberrypi/firmware/raw/master/boot/bcm2710-rpi-3-b-plus.dtb
        curl -O -L https://github.com/raspberrypi/firmware/raw/master/boot/bcm2710-rpi-cm3.dtb
    - name: Create UEFI firmware archive
      run: zip -r RPi3_UEFI_Firmware_${{steps.set_version.outputs.version}}.zip RPI_EFI.fd bootcode.bin config.txt fixup.dat start.elf Readme.md *.dtb firmware
    - name: Display SHA-256
      run: sha256sum Build/RPi3/DEBUG_GCC5/FV/RPI_EFI.fd Build/RPi3/RELEASE_GCC5/FV/RPI_EFI.fd RPi3_UEFI_Firmware_${{steps.set_version.outputs.version}}.zip
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        draft: false
        prerelease: false
        release_name: ${{steps.set_version.outputs.version}}
        body: Raspberry Pi 3 UEFI Firmware ${{steps.set_version.outputs.version}}
        tag_name: ${{steps.set_version.outputs.version}}
    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        upload_url: ${{steps.create_release.outputs.upload_url}}
        asset_path: RPi3_UEFI_Firmware_${{steps.set_version.outputs.version}}.zip
        asset_name: RPi3_UEFI_Firmware_${{steps.set_version.outputs.version}}.zip
        asset_content_type: application/zip
